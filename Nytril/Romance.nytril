using Languages;

//======================================================================

LanguageClass[] EuroRomance = [Latin, Romanian, Portuguese, Spanish, Catalan, French, Walloon, Friulian, Italian];
LanguageClass[] Romance     = EuroRomance + [PortugueseB];

//======================================================================

/*, Swadesh100 Leipzig Swadesh207, Romance, -1*/

//======================================================================

class EuropeBrazilExperimentClass: DataSetClass {
  Constructor(info) {
    super.Constructor(info, "Europe and Brazil", "EuropeB", 0);
  }

  Extra = new Branch {
    new Leaf(Portuguese);
    new Leaf(PortugueseB);
  };

  override NodeClass PriorTree = GetPriorTree(Extra);

  NodeClass NExtra = new NBranch(12) {
    new NLeaf(this, Portuguese, 1);
    new NLeaf(this, PortugueseB, 1);
  };

  override NodeClass NumberedTree = GetNumberedTree(NExtra);

}

//======================================================================

class EuropeFullExperimentClass: DataSetClass {
  Constructor(info) {
    super.Constructor(info, "Europe - Complete Cognate Sets", "EuropeFull", 2);
  }
}

//======================================================================

class EuropeExperimentClass: DataSetClass {
  Constructor(info) {
    super.Constructor(info, "Europe", "Europe", 1);
  }
}

//======================================================================


