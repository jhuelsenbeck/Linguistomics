using IO, WordGroups, Languages;

namespace Trial;

include "Concepts/Test";

Generations   = 1_000_000;
PrintFreq     = 10000;

RunFolder     = Folder("Test");
ResultsFolder = Folder("rwin");

ExampleConcept = Concepts.Woman;
FigureConcept  = Concepts.Rain;
DataConcept    = Concepts.Woman;

IncludeWordGroups = Leipzig Swadesh100 Swadesh207;

LanguageClass[] LanguageList = [
  LanguageA,
  LanguageB,
  LanguageC,
  LanguageD,
];

NumberedTree = Branch(1) {
  Leaf(LanguageA, 1);
  Branch(2) {
    Leaf(LanguageB, 3);
    Branch(4) {
      Leaf(LanguageC, 5);
      Leaf(LanguageD, 6);
    };
  }
};



//======================================================================

GetPriorTree(portuguese) = Branch {
  Leaf(Latin);
  Branch {
    Leaf(Romanian);
    Branch {
      Branch {
        Branch {
          Leaf(Walloon);
          Leaf(French);
        };
        Branch {
          Branch {
            portuguese;
            Leaf(Spanish);
          };
          Leaf(Catalan);
        }
      };
      Branch {
        Leaf(Friulian);
        Leaf(Italian);
      }
    }
  }
};

//======================================================================

class TestExperimentClass: ExperimentClass {
  Constructor {
    var data = new DataSetClass(Swadesh100 Leipzig Swadesh207, LanguageList, "207-word Swadesh list of basic vocabulary");
    super.Constructor(#8bbc5666-8f8d-49d9-b67d-fc12321ace43#, "All words", "All-100", new NaturalPartitionClass(data));
  }

  override PriorTree = Branch {
    Leaf(LanguageA);
    Branch {
      Leaf(LanguageB);
      Branch {
        Leaf(LanguageC);
        Leaf(LanguageD);
      };
    }
  };

  override NumberedTree = GetNumberedTree(NBranch(12, 1) {NLeaf(Portuguese, 1); NLeaf(PortugueseBrazil, 1)});
}


ExperimentClass[] Experiments = [
   new TestExperimentClass,
];

//======================================================================



