using Format, Units, Math, IO;

//======================================================================

with Slides.Questions {
  Title = Lang.Questions;

  Body = Paragraph {
    ParAlignment: ParAlignments.Center;
    SpaceBefore: 1 inch;
    Figure {
      TextHeight: 150 pts;
      Fill: (Style.LightColor..Style.DarkColor) {Vertical: true};
      "?";
    }
  };
}

with Slides.Introduction {
  Title = PaperSections.Introduction.Title;
  Body  = Block {
    PaperSections.Introduction.Slide;
    Style.ShowTable(TableFigures.Cognates);
  };
}

with Slides.ExampleTree {
  Title = "Example Tree";
  Body  = Style.ShowFigureSlide(Figures.ExampleTree);
}

with Slides.Alignment {
  Title = Lang.Alignment;
  Body  = Style.ShowFigureSlide(Figures.Alignment, TextHeight: 5 pts);
}

with Slides.ShowResults {
  Title = "Results";
  Body  = ReadTree("Majority Rule Consensus", Results.ResultsFolder Results.ConsensusTree);
}

with Slides.LanguagesUsed {
  Title = Lang.Languages;
  Body  = Results.ShowLanguages;
}

with Slides.ConceptsUsed {
  Title = Lang.ConceptsExamples;
  Body  = AllWords.ShowTable(3);
}

with Slides.CharacterRules {
  Title = Lang.CharacterRules;
  Body  = Results.CharacterRule.ShowDescription;
}

with Slides.SegmentFrequencies {
  Title = Lang.SegmentFrequencies;
  Body  = Results.FrequencyChart(Size(DocMetrics.SlideContent.Width, DocMetrics.SlideContent.Height - 180 pts));
}

with Slides.PartitionRules {
  Title = Lang.PartitionRules;
  Body  = Results.PartitionRule.ShowPartitions;
}

with Slides.PartitionDiagramExperiment {
  Title = Lang.TransitionRates;
  Body  = Block {
    Figures.FrequencyDiagramExperiment.Caption;
    new GroupRatesClass(Results.TransitionExperiment).PartitionDiagram(DocMetrics.SlideContent);
  };
}

with Slides.PartitionDiagramStatic {
  Title = Lang.StaticRates;
  Body  = Block {
    Figures.FrequencyDiagramStatic.Caption;
    new GroupRatesClass(Results.TransitionStatic).PartitionDiagram(DocMetrics.SlideContent);
  };
}

with Slides.PartitionBoxStatic {
  Title = "Raw Transition Rates";
  Body  = Block {
    Figures.FrequencyBoxStatic.Caption;
    new GroupRatesClass(Results.TransitionStatic).PartitionBox(DocMetrics.SlideContent);
  };
}
//======================================================================

class PresentationViewClass: BaseViewClass {
  var SlideList,
      Author;

  Constructor(id, title, author) {
    super.Constructor(id, title);
    DocumentType = ConfigurationClass.DocumentTypes.SlideShow;
    Author       = author;
    SlideList    = new ListClass(64);
  }

  void AddSlide(slide) {
    SlideList.Add(slide);
  }

  override GetDocument = Style.MainDocument {
    Results.Calculate;

    Block {
      LeftIndent: 1 inch;

      Paragraph {
        TextHeight: 40 pts;
        SpaceBefore: 1.5 inches;
        Title;
      };
      Paragraph {
        TextHeight: 18 pts;
        SpaceBefore: 1.5 inches;
        Author.First;
        Space;
        Author.Last;
      };
      var department = Author.FindFirstFact(LinkTypes.Department);
      if (valid department) {
        Paragraph {
          TextHeight: 14 pts;
          department.Name;
        };
        var org = department.FindFirstFact(LinkTypes.Department);
        if (valid org) {
          Paragraph {
            TextHeight: 14 pts;
            org.Name;
          };
        }
      }
      Paragraph {
        TextHeight: 12 pts;
        var email = Author.FindFirstFact(LinkTypes.WorkEmail);
        if (valid email)
          email.Value;
      };
    };

    foreach (var slide in SlideList)
      AddSlideBlock(slide, EachOne);
  };
}
//======================================================================

class JohnPresentationClass: PresentationViewClass {
  Constructor {
    super.Constructor(#e8e882037e4b3a438133df5adc2eb7b6#, "John's Presentation", People.JPHuelsenbeck);
    AddSlide(Slides.Introduction);
    AddSlide(Slides.LanguagesUsed);
    AddSlide(Slides.ExampleTree);
    AddSlide(Slides.Alignment);
    AddSlide(Slides.CharacterRules);
    AddSlide(Slides.SegmentFrequencies);
    AddSlide(Slides.PartitionRules);
    AddSlide(Slides.PartitionDiagramExperiment);
    AddSlide(Slides.ShowResults);
    AddSlide(Slides.Questions);
  }
}
//======================================================================

class DavidPresentationClass: PresentationViewClass {
  Constructor {
    super.Constructor(#a6e65a8a39890e46844d37c5125b2de9#, "David's Presentation", People.DMGoldstein);
    AddSlide(Slides.Introduction);
    AddSlide(Slides.LanguagesUsed);
    AddSlide(Slides.ConceptsUsed);
    AddSlide(Slides.CharacterRules);
    AddSlide(Slides.SegmentFrequencies);
    AddSlide(Slides.PartitionRules);
    AddSlide(Slides.PartitionDiagramStatic);
    AddSlide(Slides.PartitionBoxStatic);
    AddSlide(Slides.ShowResults);
    AddSlide(Slides.Questions);
  }
}
//======================================================================

