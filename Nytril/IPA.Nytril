using Format, Units, IO
//======================================================================

with IPA {
  let Link = Domain("http://www.internationalphoneticalphabet.org") Folder("ipa-charts") Folder("ipa-symbols-chart-complete")

  let OpenBackUnrounded           = "ɑ"
  let OpenMidSchwa                = "ɐ"
  let OpenBackRounded             = "ɒ"
  let RaisedOpenFrontUnrounded    = "æ"
  let VdBilabialimPlosive         = "ɓ"
  let VdBilabialTrill             = "ʙ"
  let VdBilabialFricative         = "β"
  let OpenMidBackRounded          = "ɔ"
  let VlAlveoloPalatalFricative   = "ɕ"
  let VlPalatalFricative          = "ç"
  let VdAlveolarimPlosive         = "ɗ"
  let VdRetroFlexPlosive          = "ɖ"
  let VdDentalFricative           = "ð"
  let VdPostAlveolarAffricate     = "ʤ"
  let Schwa                       = "ə"
  let CloseMidSchwa               = "ɘ"
  let RhotacizedSchwa             = "ɚ"
  let OpenMidFrontUnrounded       = "ɛ"
  let OpenMidCentral              = "ɜ"
  let RhotacizedOpenMidCentral    = "ɝ"
  let OpenMidCentralRounded       = "ɞ"
  let VdPalatalPlosive            = "ɟ"
  let VdPalatalImplosive          = "ʄ"
  let VdVelarPlosive              = "ɡ"
  let VdVelarImplosive            = "ɠ"
  let VdUvularPlosive             = "ɢ"
  let VdUvularImplosive           = "ʛ"
  let VdGlottalFricative          = "ɦ"
  let VlMultiplePlaceFricative    = "ɧ"
  let VlPharyngealFricative       = "ħ"
  let LabialPalatalApproximant    = "ɥ"
  let VlEpiglottalFricative       = "ʜ"
  let CloseCentralUnrounded       = "ɨ"
  let LaxCloseFrontUnrounded      = "ɪ"
  let VdPalatalFricative          = "ʝ"
  let VdRetroFlexLateral          = "ɭ"
  let VlAlveolarLateralFricative  = "ɬ"
  let VelarizedVdAlveolarLateral  = "ɫ"
  let VdAlveolarLateralFricative  = "ɮ"
  let VdVelarLateral              = "ʟ"
  let VdLabioDentalNasal          = "ɱ"
  let CloseBackUnrounded          = "ɯ"
  let VelarApproximant            = "ɰ"
  let VdVelarNasal                = "ŋ"
  let VdRetroFlexNasal            = "ɳ"
  let VdPalatalNasal              = "ɲ"
  let VdUvularNasal               = "ɴ"
  let FrontCloseMidRounded        = "ø"
  let RoundedSchwa                = "ɵ"
  let VlBilabialFricative         = "ɸ"
  let VlDentalFricative           = "θ"
  let FrontOpenMidRounded         = "œ"
  let FrontOpenRounded            = "ɶ"
  let BilabialClick               = "ʘ"
  let VdPostAlveolarApproximant   = "ɹ"
  let VdAlveolarLateralFlap       = "ɺ"
  let VdAlveolarTap               = "ɾ"
  let VdRetroFlexApproximant      = "ɻ"
  let VdUvularTrill               = "ʀ"
  let VdUvularFricative           = "ʁ"
  let VdRetroFlexFlap             = "ɽ"
  let VlRetroFlexFricative        = "ʂ"
  let VlPostAlveolarFricative     = "ʃ"
  let VlRetroFlexPlosive          = "ʈ"
  let VlPostAlveolarAffricate     = "ʧ"
  let CloseCentralRounded         = "ʉ"
  let LaxCloseBackRounded         = "ʊ"
  let VdLabioDentalApproximant    = "ʋ"
  let VoicedLabioDentalFlap       = "ⱱ"
  let OpenMidBackUnrounded        = "ʌ"
  let VdVelarFricative            = "ɣ"
  let CloseMidBackUnrounded       = "ɤ"
  let VlLabialVelarFricative      = "ʍ"
  let VlUvularFricative           = "χ"
  let VdPalatalLateral            = "ʎ"
  let LaxCloseFrontRounded        = "ʏ"
  let VdAlveoloPalatalFricative   = "ʑ"
  let VdRetroFlexFricative        = "ʐ"
  let VdPostAlveolarFricative     = "ʒ"
  let GlottalPlosive              = "ʔ"
  let VdEpiglottalPlosive         = "ʡ"
  let VdPharyngealFricative       = "ʕ"
  let VdEpiglottalFricative       = "ʢ"
  let DentalClick                 = "ǀ"
  let AlveolarLateralClick        = "ǁ"
  let AlveolarClick               = "ǂ"
  let RetroFlexClick              = "ǃ"
  let Downstep                    = "↓"
  let Upstep                      = "↑"
  let Becomes                     = "→"
  let Globalrise                  = "↗"
  let Globalfall                  = "↘"
  let PrimaryStress               = '\u02C8'
  let SecondaryStress             = '\u02CC'
  let LengthMark                  = '\u02D0'
  let Halflength                  = '\u02D1'
  let Ejective                    = '\u02BC'
  let Rhotacized                  = '\u02B4'
  let Aspirated                   = '\u02B0'
  let BreathyVoiceAspirated       = '\u02B1'
  let Palatalized                 = '\u02B2'
  let Labialized                  = '\u02B7'
  let Velarized                   = '\u02E0'
  let Pharyngealized              = '\u02E4'
  let RhoticHook                  = '\u02DE'
  let Voiceless                   = '\u0325'
  let VoicelessDescender          = '\u030A'
  let BreathyVoiced               = '\u0324'
  let Dental                      = '\u032A'
  let Voiced                      = '\u032C'
  let CreakyVoiced                = '\u0330'
  let Apical                      = '\u033A'
  let LinguoLabial                = '\u033C'
  let Laminal                     = '\u033B'
  let NotAudiblyReleased          = '\u031A'
  let MoreRounded                 = '\u0339'
  let Nasalized                   = '\u0303'
  let LessRounded                 = '\u031C'
  let Advanced                    = '\u031F'
  let Retracted                   = '\u0320'
  let Centralized                 = '\u0308'
  let VelarizedOrPharyngealized   = '\u0334'
  let ReadyMadeCombination        = '\u026B'
  let MidCentralized              = '\u033D'
  let Raised                      = '\u031D'
  let Syllabic                    = '\u0329'
  let Lowered                     = '\u031E'
  let NonSyllabic                 = '\u032F'
  let AdvancedTongueRoot          = '\u0318'
  let RetractedTongueRoot         = '\u0319'
  let Extrashort                  = '\u0306'
  let ExtraHighTone               = '\u030B'
  let HighTone                    = '\u0301'
  let MidTone                     = '\u0304'
  let LowTone                     = '\u0300'
  let ExtraLowTone                = '\u030F'
  let TieBarBelow                 = '\u035C'
  let TieBarAbove                 = '\u0361'

  with PulmonicConsonants {
    let Impossible   = {Unvoiced: null, Voiced: null}
    let None         = {Unvoiced: Empty, Voiced: Empty}
    let Both(u, v)   = {Unvoiced: u, Voiced: v}
    let Voiced(v)    = {Unvoiced: Empty, Voiced: v}
    let Unvoiced(v)  = {Unvoiced: Empty, Voiced: v}

    with CategoryNames {
      let Bilabial     = "Bilabial"
      let Labiodental  = "Labiodental"
      let Dental       = "Dental"
      let Alveolar     = "Alveolar"
      let Postalveolar = "Postalveolar"
      let Retroflex    = "Retroflex"
      let Palatal      = "Palatal"
      let Velar        = "Velar"
      let Uvular       = "Uvular"
      let Pharyngeal   = "Pharyngeal"
      let Glottal      = "Glottal"
    }

    let Categories = [
      {Name: "Plosive", Data: Plosive},
      {Name: "Nasal", Data: Nasal},
      {Name: "Trill", Data: Trill},
      {Name: "Tap or Flap", Data: TapFlap},
      {Name: "Fricative", Data: Fricative},
      {Name: "Lateral Fricative", Data: LateralFricative},
      {Name: "Approximant", Data: Approximant},
      {Name: "Lateral Approximant", Data: LateralApproximant}
    ]

    with Plosive {
      let Bilabial     = Both("p", "b")
      let Labiodental  = None
      let Dental       = None
      let Alveolar     = Both("t", "d")
      let Postalveolar = None
      let Retroflex    = Both("ʈ", "ɖ")
      let Palatal      = Both("c", "ɟ")
      let Velar        = Both("k", "ɡ")
      let Uvular       = Both("q", "ɢ")
      let Pharyngeal   = Both(Empty, null)
      let Glottal      = Both("ʔ", null)
    }

    with Nasal {
      let Bilabial     = Voiced("m")
      let Labiodental  = Voiced("ɱ")
      let Dental       = None
      let Alveolar     = Voiced("n")
      let Postalveolar = None
      let Retroflex    = Voiced("ɳ")
      let Palatal      = Voiced("ɲ")
      let Velar        = Voiced("ŋ")
      let Uvular       = Voiced("ɴ")
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }

    with Trill {
      let Bilabial     = Voiced("ʙ")
      let Labiodental  = None
      let Dental       = None
      let Alveolar     = Voiced("r")
      let Postalveolar = None
      let Retroflex    = None
      let Palatal      = None
      let Velar        = Impossible
      let Uvular       = Voiced("ʀ")
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with TapFlap {
      let Bilabial     = None
      let Labiodental  = Voiced("ⱱ")
      let Dental       = None
      let Alveolar     = Voiced("ɾ")
      let Postalveolar = None
      let Retroflex    = Voiced("ɽ")
      let Palatal      = None
      let Velar        = Impossible
      let Uvular       = None
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with Fricative {
      let Bilabial     = Both("ɸ", "β")
      let Labiodental  = Both("f", "v")
      let Dental       = Both("θ", "ð")
      let Alveolar     = Both("s", "z")
      let Postalveolar = Both("ʃ", "ʒ")
      let Retroflex    = Both("ʂ", "ʐ")
      let Palatal      = Both("ç", "ʝ")
      let Velar        = Both("x", "ɣ")
      let Uvular       = Both("χ", "ʁ")
      let Pharyngeal   = Both("ħ", "ʕ")
      let Glottal      = Both("h", "ɦ")
    }

    with LateralFricative {
      let Bilabial     = Impossible
      let Labiodental  = Impossible
      let Dental       = None
      let Alveolar     = Both("ɬ", "ɮ")
      let Postalveolar = None
      let Retroflex    = None
      let Palatal      = None
      let Velar        = None
      let Uvular       = None
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }

    with Approximant {
      let Bilabial     = None
      let Labiodental  = Voiced("ʋ")
      let Dental       = None
      let Alveolar     = Voiced("ɹ")
      let Postalveolar = None
      let Retroflex    = Voiced("ɻ")
      let Palatal      = Voiced("j")
      let Velar        = Voiced("ɰ")
      let Uvular       = None
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with LateralApproximant {
      let Bilabial     = Impossible
      let Labiodental  = Impossible
      let Dental       = None
      let Alveolar     = Voiced("l")
      let Postalveolar = None
      let Retroflex    = Voiced("ɭ")
      let Palatal      = Voiced("ʎ")
      let Velar        = Voiced("ʟ")
      let Uvular       = None
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }
  }

  let ImpossibleBackground = {Background: 80%}

  let TitleCell(d) = Cell {
    Metrics.SansSerif,
    TextHeight: 7 pts,
    EdgeB: 1 pts,
    d
  }

  let Character(c) = Canvas {
    HAlign: HAligns.Center,
    Width: 20 pts,
    Height: 24 pts,
    if (c == null)
      ImpossibleBackground;
    ,
    Frame {
      c
    }
  }

  let DataCell(d) = Cell {
    TextFamily: TextFamilies.CambriaMath,
    TextHeight: 18 pts,
    EdgeB: 0.25 pts {Color: Colors.LightGray},
    if (d.Unvoiced == null and d.Voiced == null)
      ImpossibleBackground;
    ,
    Group {
      Character(d.Unvoiced),
      Character(d.Voiced),
    }
  }

  let DataRow(d) = Row {
    EdgeB: 0.5 pts,
    Cell {
      Background: 90%,
      TextHeight: 8 pts,
      d.Name
    },
    DataCell(each d.Data)
  }

  let TitleBar(name, columns) = Row {
    Cell {
      ParAlignment: ParAlignments.Center,
      Background: 40%,
      TextHeight: 16 pts,
      TextColor: Colors.White,
      ColumnSpan: columns,
      name
    }
  }

  let PulmonicConsonantTable = Table {
    HAlign: HAligns.Center,
    Edge: 0.25 pts,
    Columns: [(0.8 inches) {EdgeR: 0.5 pts}] + [(0.6 inches) {HAlign: HAligns.Center, EdgeR: 0.25 pts}] * 11,

    TitleBar("Pulmonic Consonants", 12),
    Row {
      Background: 90%,
      TitleCell(Empty),
      TitleCell(each PulmonicConsonants.CategoryNames)
    },
    DataRow(each PulmonicConsonants.Categories)
  }

  let ConCell(c, name) = Cell {
    Group {
      VAlign: VAligns.Center,
      Span {
        TextFamily: TextFamilies.CambriaMath,
        TextHeight: 18 pts,
        c,
      },
      Space,
      name
    }
  }

  let ConsonantTable = Table {
    HAlign: HAligns.Center,
    Edge: 0.25 pts,
    Columns: [(1.5 inches) {EdgeR: 0.5 pts}],

    TitleBar("Non-Pulmonic Consonants", 3),
    Row {
      Background: 90%,
      Metrics.SansSerif,
      TextHeight: 12 pts,
      EdgeB: 1 pts,
      "Clicks", "Voiced implosives", "Ejectives"
    },
    Row {
      ConCell(BilabialClick, "Bilabial"), ConCell(VdBilabialimPlosive, "Bilabial"), ConCell("p" Ejective, "Bilabial")
    },
    Row {
      ConCell(DentalClick, "Dental"), ConCell(VdAlveolarimPlosive, "Dental/alveolar"), ConCell("t" Ejective, "Dental/alveolar")
    },
    Row {
      ConCell(RetroFlexClick, "(Post)alveoalar"), ConCell(VdPalatalImplosive, "Palatal"), ConCell("k" Ejective, "Velar")
    },
    Row {
      ConCell(AlveolarClick, "Palatoalveolar"), ConCell(VdVelarImplosive, "Velar"), ConCell("s" Ejective, "Alveolar fricative")
    },
    Row {
      ConCell(AlveolarLateralClick, "Alveolar lateral"), ConCell(VdUvularImplosive, "Uvular"), ConCell(Ejective, Chars.HorizontalEllipsis)
    },
  }

  let ShowAlphabet = Block {
    PulmonicConsonantTable,
    Empty,
    ConsonantTable
  }
}
