using Format, Units, IO
//======================================================================

with IPA {
  let Link = Domain("http://www.internationalphoneticalphabet.org") Folder("ipa-charts") Folder("ipa-symbols-chart-complete")

  with CategoryNames {
    let Bilabial     = "Bilabial"
    let Labiodental  = "Labiodental"
    let Dental       = "Dental"
    let Alveolar     = "Alveolar"
    let Postalveolar = "Postalveolar"
    let Retroflex    = "Retroflex"
    let Palatal      = "Palatal"
    let Velar        = "Velar"
    let Uvular       = "Uvular"
    let Pharyngeal   = "Pharyngeal"
    let Glottal      = "Glottal"
  }

  let VdBilabialPlosive       = "b"
  let VlBilabialPlosive       = "p"
  let VlAlveolarPlosive       = "t"
  let VdAlveolarPlosive       = "d"
  let VlPalatalPlosiv         = "c"
  let VlVelarPlosiv           = "k"
  let VlUvularPlosiv          = "q"
  let VdBilabialNasal         = "m"
  let VdAlveolarNasal         = "n"
  let VdAlveolarTrill         = "r"
  let VlLabiodentalFricative  = "f"
  let VdLabiodentalFricative  = "v"
  let VlAlveolarFricative     = "s"
  let VdAlveolarFricative     = "z"
  let VlVelarFricative        = "x"
  let VlGlottalFricative      = "h"
  let VdPalatalApproximant    = "j"
  let VdAlveolarLateralApproximant = "l"



  let OpenBackUnrounded           = "ɑ"
  let OpenMidSchwa                = "ɐ"
  let OpenBackRounded             = "ɒ"
  let RaisedOpenFrontUnrounded    = "æ"
  let VdBilabialimPlosive         = "ɓ"
  let VdBilabialTrill             = "ʙ"
  let VdBilabialFricative         = "β"
  let OpenMidBackRounded          = "ɔ"
  let VlAlveoloPalatalFricative   = "ɕ"
  let VlPalatalFricative          = "ç"
  let VdAlveolarimPlosive         = "ɗ"
  let VdRetroFlexPlosive          = "ɖ"
  let VdDentalFricative           = "ð"
  let VdPostAlveolarAffricate     = "ʤ"
  let Schwa                       = "ə"
  let CloseMidSchwa               = "ɘ"
  let RhotacizedSchwa             = "ɚ"
  let OpenMidFrontUnrounded       = "ɛ"
  let OpenMidCentral              = "ɜ"
  let RhotacizedOpenMidCentral    = "ɝ"
  let OpenMidCentralRounded       = "ɞ"
  let VdPalatalPlosive            = "ɟ"
  let VdPalatalImplosive          = "ʄ"
  let VdVelarPlosive              = "ɡ"
  let VdVelarImplosive            = "ɠ"
  let VdUvularPlosive             = "ɢ"
  let VdUvularImplosive           = "ʛ"
  let VdGlottalFricative          = "ɦ"
  let VlMultiplePlaceFricative    = "ɧ"
  let VlPharyngealFricative       = "ħ"
  let LabialPalatalApproximant    = "ɥ"
  let VlEpiglottalFricative       = "ʜ"
  let CloseCentralUnrounded       = "ɨ"
  let LaxCloseFrontUnrounded      = "ɪ"
  let VdPalatalFricative          = "ʝ"
  let VdRetroFlexLateral          = "ɭ"
  let VlAlveolarLateralFricative  = "ɬ"
  let VelarizedVdAlveolarLateral  = "ɫ"
  let VdAlveolarLateralFricative  = "ɮ"
  let VdVelarLateral              = "ʟ"
  let VdLabioDentalNasal          = "ɱ"
  let CloseBackUnrounded          = "ɯ"
  let VelarApproximant            = "ɰ"
  let VdVelarNasal                = "ŋ"
  let VdRetroFlexNasal            = "ɳ"
  let VdPalatalNasal              = "ɲ"
  let VdUvularNasal               = "ɴ"
  let FrontCloseMidRounded        = "ø"
  let RoundedSchwa                = "ɵ"
  let VlBilabialFricative         = "ɸ"
  let VlDentalFricative           = "θ"
  let FrontOpenMidRounded         = "œ"
  let FrontOpenRounded            = "ɶ"
  let BilabialClick               = "ʘ"
  let VdPostAlveolarApproximant   = "ɹ"
  let VdAlveolarLateralFlap       = "ɺ"
  let VdAlveolarTap               = "ɾ"
  let VdRetroFlexApproximant      = "ɻ"
  let VdUvularTrill               = "ʀ"
  let VdUvularFricative           = "ʁ"
  let VdRetroFlexFlap             = "ɽ"
  let VlRetroFlexFricative        = "ʂ"
  let VlPostAlveolarFricative     = "ʃ"
  let VlRetroFlexPlosive          = "ʈ"
  let VlPostAlveolarAffricate     = "ʧ"
  let CloseCentralRounded         = "ʉ"
  let LaxCloseBackRounded         = "ʊ"
  let VdLabioDentalApproximant    = "ʋ"
  let VdLabioDentalFlap           = "ⱱ"
  let OpenMidBackUnrounded        = "ʌ"
  let VdVelarFricative            = "ɣ"
  let CloseMidBackUnrounded       = "ɤ"
  let VlLabialVelarFricative      = "ʍ"
  let VlUvularFricative           = "χ"
  let VdPalatalLateral            = "ʎ"
  let LaxCloseFrontRounded        = "ʏ"
  let VdAlveoloPalatalFricative   = "ʑ"
  let VdRetroFlexFricative        = "ʐ"
  let VdPostAlveolarFricative     = "ʒ"
  let GlottalPlosive              = "ʔ"
  let VdEpiglottalPlosive         = "ʡ"
  let VdPharyngealFricative       = "ʕ"
  let VdEpiglottalFricative       = "ʢ"
  let DentalClick                 = "ǀ"
  let AlveolarLateralClick        = "ǁ"
  let AlveolarClick               = "ǂ"
  let RetroFlexClick              = "ǃ"
  let Downstep                    = "↓"
  let Upstep                      = "↑"
  let Becomes                     = "→"
  let Globalrise                  = "↗"
  let Globalfall                  = "↘"
  let PrimaryStress               = "\u02C8"
  let SecondaryStress             = "\u02CC"
  let LengthMark                  = "\u02D0"
  let Halflength                  = "\u02D1"
  let Ejective                    = "\u02BC"
  let Rhotacized                  = "\u02B4"
  let Aspirated                   = "\u02B0"
  let BreathyVoiceAspirated       = "\u02B1"
  let Palatalized                 = "\u02B2"
  let Labialized                  = "\u02B7"
  let Velarized                   = "\u02E0"
  let Pharyngealized              = "\u02E4"
  let RhoticHook                  = "\u02DE"
  let Voiceless                   = "\u0325"
  let VoicelessDescender          = "\u030A"
  let BreathyVoiced               = "\u0324"
  let Dental                      = "\u032A"
  let Voiced                      = "\u032C"
  let CreakyVoiced                = "\u0330"
  let Apical                      = "\u033A"
  let LinguoLabial                = "\u033C"
  let Laminal                     = "\u033B"
  let NotAudiblyReleased          = "\u031A"
  let MoreRounded                 = "\u0339"
  let Nasalized                   = "\u0303"
  let LessRounded                 = "\u031C"
  let Advanced                    = "\u031F"
  let Retracted                   = "\u0320"
  let Centralized                 = "\u0308"
  let VelarizedOrPharyngealized   = "\u0334"
  let ReadyMadeCombination        = "\u026B"
  let MidCentralized              = "\u033D"
  let Raised                      = "\u031D"
  let Syllabic                    = "\u0329"
  let Lowered                     = "\u031E"
  let NonSyllabic                 = "\u032F"
  let AdvancedTongueRoot          = "\u0318"
  let RetractedTongueRoot         = "\u0319"
  let Extrashort                  = "\u0306"
  let ExtraHighTone               = "\u030B"
  let HighTone                    = "\u0301"
  let MidTone                     = "\u0304"
  let LowTone                     = "\u0300"
  let ExtraLowTone                = "\u030F"
  let TieBarBelow                 = "\u035C"
  let TieBarAbove                 = "\u0361"

  with PulmonicConsonants {
    let Impossible   = {U: null,  V: null}
    let None         = {U: Empty, V: Empty}
    let Both(u, v)   = {U: u,     V: v}
    let Voiced(v)    = {U: Empty, V: v}

    with Plosive {
      let Bilabial     = Both(VlBilabialPlosive, VdBilabialPlosive)
      let Labiodental  = None
      let Dental       = None
      let Alveolar     = Both(VlAlveolarPlosive, VdAlveolarPlosive)
      let Postalveolar = None
      let Retroflex    = Both(VlRetroFlexPlosive, VdRetroFlexPlosive)
      let Palatal      = Both(VlPalatalPlosiv, VdPalatalPlosive)
      let Velar        = Both(VlVelarPlosiv, VdVelarPlosive)
      let Uvular       = Both(VlUvularPlosiv, VdUvularPlosive)
      let Pharyngeal   = Both(Empty, null)
      let Glottal      = Both(GlottalPlosive, null)
    }

    with Nasal {
      let Bilabial     = Voiced(VdBilabialNasal)
      let Labiodental  = Voiced(VdLabioDentalNasal)
      let Dental       = None
      let Alveolar     = Voiced(VdAlveolarNasal)
      let Postalveolar = None
      let Retroflex    = Voiced(VdRetroFlexNasal)
      let Palatal      = Voiced(VdPalatalNasal)
      let Velar        = Voiced(VdVelarNasal)
      let Uvular       = Voiced(VdUvularNasal)
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }

    with Trill {
      let Bilabial     = Voiced(VdBilabialTrill)
      let Labiodental  = None
      let Dental       = None
      let Alveolar     = Voiced(VdAlveolarTrill)
      let Postalveolar = None
      let Retroflex    = None
      let Palatal      = None
      let Velar        = Impossible
      let Uvular       = Voiced(VdUvularTrill)
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with TapFlap {
      let Bilabial     = None
      let Labiodental  = Voiced(VdLabioDentalFlap)
      let Dental       = None
      let Alveolar     = Voiced(VdAlveolarTap)
      let Postalveolar = None
      let Retroflex    = Voiced(VdRetroFlexFlap)
      let Palatal      = None
      let Velar        = Impossible
      let Uvular       = None
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with Fricative {
      let Bilabial     = Both(VlBilabialFricative, VdBilabialFricative)
      let Labiodental  = Both(VlLabiodentalFricative, VdLabiodentalFricative)
      let Dental       = Both(VlDentalFricative, VdDentalFricative)
      let Alveolar     = Both(VlAlveolarFricative, VdAlveolarFricative)
      let Postalveolar = Both(VlPostAlveolarFricative, VdPostAlveolarFricative)
      let Retroflex    = Both(VlRetroFlexFricative, VdRetroFlexFricative)
      let Palatal      = Both(VlPalatalFricative, VdPalatalFricative)
      let Velar        = Both(VlVelarFricative, VdVelarFricative)
      let Uvular       = Both(VlUvularFricative, VdUvularFricative)
      let Pharyngeal   = Both(VlPharyngealFricative, VdPharyngealFricative)
      let Glottal      = Both(VlGlottalFricative, VdGlottalFricative)
    }

    with LateralFricative {
      let Bilabial     = Impossible
      let Labiodental  = Impossible
      let Dental       = None
      let Alveolar     = Both(VlAlveolarLateralFricative, VdAlveolarLateralFricative)
      let Postalveolar = None
      let Retroflex    = None
      let Palatal      = None
      let Velar        = None
      let Uvular       = None
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }

    with Approximant {
      let Bilabial     = None
      let Labiodental  = Voiced(VdLabioDentalApproximant)
      let Dental       = None
      let Alveolar     = Voiced(VdPostAlveolarApproximant)
      let Postalveolar = None
      let Retroflex    = Voiced(VdRetroFlexApproximant)
      let Palatal      = Voiced(VdPalatalApproximant)
      let Velar        = Voiced(VelarApproximant)
      let Uvular       = None
      let Pharyngeal   = None
      let Glottal      = Impossible
    }

    with LateralApproximant {
      let Bilabial     = Impossible
      let Labiodental  = Impossible
      let Dental       = None
      let Alveolar     = Voiced(VdAlveolarLateralApproximant)
      let Postalveolar = None
      let Retroflex    = Voiced(VdRetroFlexLateral)
      let Palatal      = Voiced(VdPalatalLateral)
      let Velar        = Voiced(VdVelarLateral)
      let Uvular       = None
      let Pharyngeal   = Impossible
      let Glottal      = Impossible
    }
  }

  let HeaderCell(d) = Cell {
    HAlign: HAligns.Center,
    Style.SansSerif,
    Style.TitleBackground,
    EdgeB: 1 pts,
    PaddingTB: 2 pts,
    d
  }

  let Character(c) = Canvas {
    HAlign: HAligns.Center,
    Width: 20 pts,
    Height: 24 pts,
    c ?? Style.ImpossibleBackground
  }

  let CharacterCell(d) = Cell {
    TextFamily: Style.IPAFamily,
    TextHeight: 18 pts,
    if d.U or d.V then
      Group {
        Character(d.U),
        Character(d.V),
      }
    else
      Style.ImpossibleBackground
    end
  }

  let DataRow(name, data) = Row {
    EdgeB: 0.5 pts,
    Cell {
      VAlign: VAligns.Center,
      EdgeR: 0.5 pts,
      Style.TitleBackground,
      PaddingLR: 2 pts,
      TextHeight: 8 pts,
      name
    },
    CharacterCell(each data)
  }

  let TitleBar(name, columns) = Row {
    Cell {
      Padding: 2 pts,
      ParAlignment: ParAlignments.Center,
      Background: 40%,
      TextHeight: 16 pts,
      TextColor: Colors.White,
      ColumnSpan: columns,
      name
    }
  }

  let PulmonicConsonantTable = Table {
    HAlign: HAligns.Center,
    Edge: 0.5 pts,
    Columns: [(0.8 inches) {EdgeR: 0.5 pts}] + [(0.6 inches) {HAlign: HAligns.Center, EdgeR: 0.25 pts}] * 11,

    TitleBar("Pulmonic Consonants", 12),
    Row {
      Style.TitleBackground,
      TextHeight: 7 pts,
      HeaderCell(Empty),
      HeaderCell(each CategoryNames)
    },

    DataRow("Plosive", PulmonicConsonants.Plosive),
    DataRow("Nasal", PulmonicConsonants.Nasal),
    DataRow("Trill", PulmonicConsonants.Trill),
    DataRow("Tap or Flap", PulmonicConsonants.TapFlap),
    DataRow("Fricative", PulmonicConsonants.Fricative),
    DataRow("Lateral Fricative", PulmonicConsonants.LateralFricative),
    DataRow("Approximant", PulmonicConsonants.Approximant),
    DataRow("Lateral Approximant", PulmonicConsonants.LateralApproximant),
  }

  let ConCell(c, name) = Cell {
    Padding: 2 pts,
    Group {
      VAlign: VAligns.Center,
      Span {
        TextFamily: Style.IPAFamily,
        TextHeight: 18 pts,
        c,
      },
      Space,
      name
    }
  }

  let ConsonantTable = Table {
    HAlign: HAligns.Center,
    Edge: 0.5 pts,
    Columns: [(1.5 inches) {EdgeR: 0.5 pts}],

    TitleBar("Non-Pulmonic Consonants", 3),
    Row {
      TextHeight: 12 pts,
      HeaderCell(each ["Clicks", "Voiced implosives", "Ejectives"])
    },
    Row {
      ConCell(BilabialClick, "Bilabial"), ConCell(VdBilabialimPlosive, "Bilabial"), ConCell(VlBilabialPlosive Ejective, "Bilabial")
    },
    Row {
      ConCell(DentalClick, "Dental"), ConCell(VdAlveolarimPlosive, "Dental/alveolar"), ConCell(VlAlveolarPlosive Ejective, "Dental/alveolar")
    },
    Row {
      ConCell(RetroFlexClick, "(Post)alveoalar"), ConCell(VdPalatalImplosive, "Palatal"), ConCell(VlVelarPlosiv Ejective, "Velar")
    },
    Row {
      ConCell(AlveolarClick, "Palatoalveolar"), ConCell(VdVelarImplosive, "Velar"), ConCell(VlAlveolarFricative Ejective, "Alveolar fricative")
    },
    Row {
      ConCell(AlveolarLateralClick, "Alveolar lateral"), ConCell(VdUvularImplosive, "Uvular"), ConCell(Ejective, Chars.HorizontalEllipsis)
    },
  }

  let ShowAlphabet = Block {
    PulmonicConsonantTable,
    Empty,
    ConsonantTable
  }
}
