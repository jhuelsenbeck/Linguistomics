using Format, Units, Style, LinkTypes;

Main.MathFamily   = TextFamilies.LinuxLibertineO;
Main.SymbolFamily = TextFamilies.CMUClassicalSerif;

//======================================================================

DiagDocumentClass = Document {
  TextHeight: 9 pts;
};

//======================================================================

BaseDocumentClass = Document {
  TextFamily: TextFamilies.TimesNewRoman;
  TextHeight: 9 pts;

  AuthorLink to Authors;
  Link to References;
  RefStyle: new NatureStyleClass;
};

//======================================================================

class SubmissionViewClass: DocumentClass {
  Constructor {
    super.Constructor(#670da93e-0b8c-46f0-8ab2-01de4ea8ebdb#, "Paper");
    Title  = Info.Title;
    Margin = DocMetrics.DocMargin;
  }

  FooterBlock = Block {
    Paragraph {
      ParAlignment: ParAlignments.Right;
      PageNumber; "/"; PageCount;
    }
  };

  override GetDocument = BaseDocumentClass {
    PageSection {
      Footer: FooterBlock {
        Even: FooterBlock;
        First: Block;
      };

      MainTitle {
        Info.Title;
      };

      ShowAuthorList(Authors);

      Header1 {
        Abstract.Title
      };
      Abstract.Body(Extent.Size);
      ShowTitledContent(PaperSections.Introduction);
      Header1 {
        Lang.Results
      };

      ShowTitledContent(PaperSections.WordTransformation);
      ShowTitledContent(PaperSections.WordSegmentRelationships);
      ShowTitledContent(PaperSections.RomanceLanguagePhylogeny);
      ShowTitledContent(PaperSections.Discussion);
      ShowTitledContent(PaperSections.MethodsSummary);
      ShowTitledContent(PaperSections.DataSummary);
      ShowTitledContent(PaperSections.ModelInference);
      ShowTitledContent(PaperSections.DataCuration);
      ShowTitledContent(PaperSections.Acknowledgements);
      ShowTitledContent(PaperSections.Contributions);
    };

    ShowBibliography;
    PageSection {
      ShowFigureDoc(Extent.Size, Figures.TransitionRates);
    }
  };
}
//======================================================================

class SupplimentalViewClass: DocumentClass {
  Constructor {
    super.Constructor(#9082a441-cf06-4a95-b484-2cb5f5484c59#, "Supplemental Material");
    Title  = Name;
    Margin = DocMetrics.DocMargin;
  }

  HeaderBlock = Block {
    Span {
      TextCase: TextCases.AllUpper;
      Info.Title;
    }
  };

  override GetDocument = BaseDocumentClass {
    var appendices = [
      new AppendixClass(Lang.PartitionRules, Experiment.Rule.ShowPartitions),
//      new AppendixClass(Lang.FunctionalLoad, Experiment.ShowFunctionalLoad),
      new AppendixClass("Experimental Runs", Experiment.ShowExperiment),
    ];

    PageSection {
      Header: HeaderBlock {
        Distance: 0.125 inches;
        MarginT: 0.125 inch;
        Even: HeaderBlock;
        First: Block;
      };

      MainTitle {
        Title;
        SpaceAfter: 0;
      };
      Paragraph {
        LeftIndent: 24 pts;
        TextHeight: 12 pts;
        "For: "; DQuote {Info.Title};
        SpaceAfter: 10 pts;
      };

      ShowAuthorList(Authors);

      ShowTitledContent(PaperSections.Introduction);
      ShowTitledContent(PaperSections.Methods);
      ShowTitledContent(PaperSections.Conclusion);
    };

    ShowBibliography;
    ShowAppendix(each appendices);
  };
}
//======================================================================

class AlignmentViewClass: DocumentClass {
  Constructor {
    super.Constructor(#a14658e4-26f7-4eab-87b7-4f486035103b#, "Alignments");
    Margin = DocMetrics.DocMargin;
  }

  override GetDocument = BaseDocumentClass {
    var chart = new AlignmentChartClass(MainResults);
    chart.ShowChart(Extent.Size);
    PageBreak;
    chart.ShowAll;
  };
}
//======================================================================



