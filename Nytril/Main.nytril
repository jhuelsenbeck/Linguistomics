using Format, Units, Math, IO

include "English"
include "Library"
include "Languages"
include "LanguageTree"
include "IPA"
include "Style"
include "References"
include "WordForms"
include "Tables"
//======================================================================

let Main.Run = [
//  Write(RevBayes.SourceFile, Info.RevSourcePath),
  Write(Results.LanguageTreeFile, Info.LanguageTreePath),
  Write(Results.CharacterFile, Info.CharacterPath),
  Write(WhitePaper, Info.PaperPath Extensions.PDF),
//  Write(WhitePaper, Info.PaperPath Extensions.Word),
  IO.OpenDocument(Info.PaperPath Extensions.PDF),
]
//======================================================================

with Info
  let MainFolder       = Folders.Source
  let OutputFolder     = MainFolder Folder("Output")
  let PaperPath        = OutputFolder FileName("Paper")
  let LanguageTreePath = OutputFolder FileName("LanguageTree") Extensions.Nexus
  let RevSourcePath    = OutputFolder FileName("Analysis") Extensions.RevBayes

  let CharacterPath    = OutputFolder FileName("Characters") Extensions.Nexus
  let Journal          = "Transactions of the Beysian Society"
  let Publisher        = "The Baysian Society"
  let Title            = "Simulated Feature Evolution using the TKF91 Model"
  let LanguageTree     = LanguageBranches.Romance

  let AuthorList = Span {
    Separator: Lang.Separator,
    LastSeparator: " {0} "(Lang.And),
    Style.Author(each Authors)
  }
end
//======================================================================

let Watch = WhitePaper

let WhitePaper = Style.WhitePaper {
  Title: Info.Title,
  Author: Info.AuthorList,
//  Description: "Test Description",
//  Comment: "Test Comment",
//  Subject: "Test Subject",
//  Keywords: "Test Keywords",

  Style.PageSection {
    Header: Style.NormalHeader(Info.Journal) {
      Distance: 0.125 inches,
      Even: Style.NormalHeader(Info.Journal),
      First: Block {
        Paragraph {
          ParAlignment: ParAlignments.Center,
          Logo,
        },
      }
    },
    Block {
      ParAlignment: ParAlignments.Center,
      Style.Title(Info.Title),
      Paragraph {
        Info.AuthorList
      },
    },
    Style.ShowAbstract(Abstract),
    Style.ShowContent(each Content),
    Style.ShowAuthors(Authors),
    Style.ShowAppendixTable,
    Style.ShowReferences(References),
  },
  Style.ShowAppendix(each Appendix)
}
//======================================================================

let AddAppendix(title, content) = {Title: title, Content: content}

let Appendix = [
  AddAppendix(Lang.LanguagePhylogeny, Style.ShowLanguageTree),
//  AddAppendix("Meanings with words in every language", CompleteMeanings.ShowTable),
  AddAppendix("Words in each language by meaning", AllWords.ShowTable(Results.UsedLanguages, Results.UsedMeanings)),
  AddAppendix("Character file", Results.CharacterFile Style.MonoFamily),
  AddAppendix("Segments in the target word list", DisplayCharacters.ShowTable),
  AddAppendix("Segment Groups", MatchingConsonants.ShowTables),
  AddAppendix(Lang.Diacritics, MatchingDiacritics.ShowTable),
  AddAppendix("Euler Feature Diagram", IPA.FeatureChart),
  AddAppendix("Feature Change", IPA.DriftSection),
  AddAppendix(Lang.IPAFullName, IPA.SegmentTable),
  AddAppendix("Feature Tree", SegmentTree.ShowTree),
  AddAppendix("SAMPAConversion", SAMPAConversion.ShowTable),
  AddAppendix("Word Lists by Language", DisplayWords.ShowTable(each Results.UsedLanguages)),
  AddAppendix("Language Tree File", Results.LanguageTreeFile Style.MonoFamily),
  AddAppendix(Lang.NytrilSourceCode, Style.SourceFile(each System.SourceList)),
]
//======================================================================

with Abstract
  let Title = Lang.Abstract
  let Body  = Block {
    Paragraph {
      "It all started in a little town called Madrid..."
    }
  }
end
//======================================================================

with Content.Introduction
  let Title = Lang.Introduction
  let Body  = Block {
    Paragraph {
      "In this paper, we attempt to do the impossible!"
    }
  }
end
//======================================================================

with Content.Methods
  let Title = Lang.Methods
  let Body  = Block {
    Paragraph {
      "We used any and all means necessary."
    }
  }
end
//======================================================================

with Content.Conclusion
  let Title = Lang.Conclusion
  let Body  = Block {
    Paragraph {
      "Vene Vidi Vici"
    }
  }
end
//======================================================================



