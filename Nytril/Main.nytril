using Format, Units, Math, IO;

include "English";
include "Library";
include "Languages";
include "LanguageTree";
include "IPA";
include "Style";
include "References";
include "WordForms";
include "Tables";
include "RevBayes";
//======================================================================

class AnalysisViewClass: DocumentViewClass {
  var OutFolder;

  Constructor(outfolder) {
    OutFolder = outfolder;
    super.Constructor("View " outfolder, outfolder);
  }

  override GetDocument {
    return GetWatch(new ComputeClass(OutFolder));
  }
}
//======================================================================

// No spaces in the names below!
// RevBayes has a problem with folder names that contain spaces...

PreviousRuns = ["Output1"];

Main.Documents = new AnalysisViewClass(each PreviousRuns);

void RunAnalysis(outname) {
  var compute = new ComputeClass(outname);
  compute.Calculate;

  var paper = GetWatch(compute);
  Write(paper, compute.OutFolder FileName(Info.PaperTitle) Extensions.PDF);
}

void Main.Run {
  RunAnalysis("Output1");
}
//======================================================================

enum ConceptsList {
  I,
  You,
  Water,
  Ear,
  New,
  We,
  Eye,
  One,
  Star
}

with Info {
  PaperTitle  = "White Paper";
  Journal     = "Transactions of the Beysian Society";
  Publisher   = "The Baysian Society";
  Title       = "Simulated Segment Evolution using the TKF91 Model";
  PriorTree   = GetTreeNodes(LanguageBranches.Romance);

  AuthorList = Span {
    Separator: ", ";
    LastSeparator: " {0} "(Lang.And);
    Style.Author(each Authors)
  };
}
//======================================================================

GetWatch(compute) = Style.WhitePaper {
  Title: Info.Title;
  Author: Info.AuthorList;
//  Description: "Test Description";
//  Comment: "Test Comment";
//  Subject: "Test Subject";
//  Keywords: "Test Keywords";


  var appendices = GetAppendices(compute);
  Style.PageSection {
    Header: Style.NormalHeader(Info.Journal) {
      Distance: 0.125 inches;
      Even: Style.NormalHeader(Info.Journal);
      First: Block {
        Paragraph {
          ParAlignment: ParAlignments.Center;
          Logo;
        };
      }
    };
    Block {
      ParAlignment: ParAlignments.Center;
      Style.Title(Info.Title);
      Paragraph {
        Info.AuthorList
      };
    };
    Style.HeaderCentered(Abstract.Title);
    Abstract.Body;

    Style.ShowContent(each Content);
    Style.ShowAuthors(Authors);

    Style.HeaderCentered(Lang.Appendices);
    Style.AppendixRow(each appendices);

    Style.ShowReferences(References);
  };
  Style.ShowAppendix(each appendices)
};
//======================================================================

with Abstract {
  Title = Lang.Abstract;
  Body  = Block {
    Paragraph {
      "It all started in a little town called Madrid...";
    };
  };
}
//======================================================================

with Content.Introduction {
  Title = Lang.Introduction;
  Body  = Block {
    Paragraph {
      "In this paper, we attempt to do the impossible!";
    };
  };
}
//======================================================================

with Content.Methods {
  Title = Lang.Methods;
  Body  = Block {
    Paragraph {
      "We used any and all means necessary.";
    };
  };
}
//======================================================================

with Content.Conclusion {
  Title = Lang.Conclusion;
  Body  = Block {
    Paragraph {
      "Vene Vidi Vici";
    };
  };
}
//======================================================================

AddAppendix(list, name, content) = list.Add(new AppendixClass(name, content));

GetAppendices(compute) {
  var list = new ListClass(16);

  AddAppendix(list, "Options File", compute.OptionsSource);
  AddAppendix(list, "RevBayes Source File", compute.RevBayesSource);
  AddAppendix(list, "Character File", compute.CharacterSource);
  AddAppendix(list, "Program Output", compute.ShowLanguageTrees);
  AddAppendix(list, Lang.ConceptsUsed, AllWords.ShowTable);
  AddAppendix(list, "Segments used in the word list", DisplayCharacters.ShowTable);
  AddAppendix(list, "Feature change in first segment", IPA.DriftSection);
  AddAppendix(list, "Word Lists by Language", DisplayWords.ShowTable);
  AddAppendix(list, "Segment Groups", MatchingConsonants.ShowTables);
  AddAppendix(list, "Euler Feature Diagram", IPA.FeatureChart);
  AddAppendix(list, Lang.IPAFullName, IPA.SegmentTable);
  AddAppendix(list, "Feature Tree", SegmentTree.ShowTree);

//  AddAppendix(list, Lang.Diacritics, MatchingDiacritics.ShowTable);
//  AddAppendix(list, Lang.NytrilSourceCode, Style.SourceFile(each System.SourceList));
  return list;
}
//======================================================================



