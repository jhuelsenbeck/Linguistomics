using Format, Units, Math, IO

include "English"
include "Library"
include "Languages"
include "LanguageTree"
include "IPA"
include "Style"
include "References"
include "WordForms"
include "Tables"
//======================================================================

let Main.Run = [
//  Write(Nexus.SourceFile, Nexus.SourcePath),
//  Write(RevBayes.SourceFile, RevBayes.SourcePath),
//  Write(WhitePaper, Info.PaperPath Extensions.Word),
  Write(Results.LanguageTreeFile, Info.LanguageTreePath),
  Write(Results.CharacterFile, Info.CharacterPath),
  Write(WhitePaper, Info.PaperPath Extensions.PDF),
  IO.OpenDocument(Info.PaperPath Extensions.PDF),
]
//======================================================================

with Info
  let MainFolder       = Folders.Source
  let OutputFolder     = MainFolder Folder("Output")
  let PaperPath        = OutputFolder FileName("Paper")
  let LanguageTreePath = OutputFolder FileName("LanguageTree") Extensions.Nexus
  let CharacterPath    = OutputFolder FileName("Characters") Extensions.Nexus
  let Journal          = "Transactions of the Beysian Society"
  let Publisher        = "The Baysian Society"
  let Title            = "Simulated Word Sound Evolution using the TKF91 Model"

  let LanguageTree     = LanguageBranches.Romance
end
//======================================================================

with Results
  let LangHasWords(ref language) = language.Words != null
  let LanguageList               = FindSlice(Languages, LangHasWords)

  let CompleteMeanings = IPA.FindCompleteMeanings(LanguageList)
  let UniqueSounds     = IPA.FindUniqueSounds(LanguageList)

  let Taxa             = [{Name: "Taxon1", Characters: "ABCDEFG"}]*5
  let LanguageTreeFile = Nexus.TreeFile(Info.LanguageTree)
  let CharacterFile    = Nexus.CharacterFile(Taxa, UniqueSounds.Length)
end
//======================================================================

let Watch = WhitePaper

let WhitePaper = Style.WhitePaper {
  Title: Info.Title,
  Style.PageSection {
    Header: Style.NormalHeader(Info.Journal) {
      Distance: 0.125 inches,
      Even: Style.NormalHeader(Info.Journal),
      First: Block {
        Paragraph {
          ParAlignment: ParAlignments.Center,
          Logo,
        },
      }
    },
    Block {
      ParAlignment: ParAlignments.Center,
      Style.Title(Info.Title),
      Paragraph {
        Span {
          Separator: Lang.Separator,
          LastSeparator: " {0} "(Lang.And),
          Style.Author(each Authors)
        }
      },
    },
    Style.ShowAbstract(Abstract),
    Style.ShowContent(each Content),
    Style.ShowAuthors(Authors),
    Style.ShowAppendixTable,
    Style.ShowReferences(References),
  },
  Style.ShowAppendix(each Appendix)
}
//======================================================================

with Abstract
  let Title = Lang.Abstract
  let Body  = Block {
    Paragraph {
      "It all started in a little town called Madrid..."
    }
  }
end
//======================================================================

with Content.Introduction
  let Title = Lang.Introduction
  let Body  = Block {
    Paragraph {
      "In this paper, we attempt to do the impossible!"
    }
  }
end
//======================================================================

with Content.Methods
  let Title = Lang.Methods
  let Body  = Block {
    Paragraph {
      "We used any and all means necessary."
    }
  }
end
//======================================================================

with Content.Conclusion
  let Title = Lang.Conclusion
  let Body  = Block {
    Paragraph {
      "Vene Vidi Vici"
    }
  }
end
//======================================================================



