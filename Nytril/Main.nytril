using Format, Units, Math, IO

include "English"
include "Library"
include "Languages"
include "LanguageTree"
include "IPA"
include "Style"
include "References"
include "WordForms"
//======================================================================

let Main.Run = [
//  Write(Nexus.SourceFile, Nexus.SourcePath),
//  Write(RevBayes.SourceFile, RevBayes.SourcePath),
//  Write(WhitePaper, PaperPath Extensions.Word),
  Write(WhitePaper, Info.PaperPath Extensions.PDF),
  IO.OpenDocument(Info.PaperPath Extensions.PDF),
]
//======================================================================

with Info
  let MainFolder   = Folders.Source
  let OutputFolder = MainFolder Folder("Output")

  let PaperPath    = OutputFolder FileName("Paper")
  let Journal      = "Transactions of the Beysian Society"
  let Publisher    = "The Baysian Society"
  let Title        = "Bayesian Analysis of Word Forms"

  let LanguageTree = LanguageBranches.Romance
end
//======================================================================

let Watch = WhitePaper

let WhitePaper = Style.WhitePaper {
  Title: Info.Title,
  Style.PageSection {
    Header: Style.NormalHeader(Info.Journal) {
      Distance: 0.125 inches,
      Even: Style.NormalHeader(Info.Journal),
      First: Block {
        Paragraph {
          ParAlignment: ParAlignments.Center,
          Logo,
        },
      }
    },
    Block {
      ParAlignment: ParAlignments.Center,
      Style.Title(Info.Title {TextUppercase: true}),
      Paragraph {
        Span {
          Separator: ", ",
          LastSeparator: " {0} "(Lang.And),
          Style.Author(each Authors)
        }
      },
    },
    Style.ShowAbstract(Abstract),
    Style.ShowContent(each Content),
    Style.ShowAuthors(Authors),
    Style.ShowAppendixTable,
    Style.ShowReferences(References),
  },
  Style.ShowAppendix(each Appendix)
}
//======================================================================

with Abstract
  let Title = Lang.Abstract
  let Body  = Block {
    Paragraph {
      "It all started in a little town called Madrid..."
    }
  }
end
//======================================================================

with Content.Introduction
  let Title = Lang.Introduction
  let Body  = Block {
    Paragraph {
      "In this paper, we attempt to do the impossible!"
    }
  }
end
//======================================================================

with Content.Methods
  let Title = Lang.Methods
  let Body  = Block {
    Paragraph {
      "We used any and all means necessary."
    }
  }
end
//======================================================================

with Content.Conclusion
  let Title = Lang.Conclusion
  let Body  = Block {
    Paragraph {
      "Vene Vidi Vici"
    }
  }
end
//======================================================================

let ShowAppendix(title, content) = {Title: title, Content: content}

let Appendix.SoundGroups        = ShowAppendix(Lang.SoundGroups, IPA.ShowGroups)
let Appendix.IPA                = ShowAppendix(Lang.IPA, IPA.SoundTable)
let Appendix.LanguagePhylogeny  = ShowAppendix(Lang.LanguagePhylogeny, Style.ShowTree(Info.LanguageTree))
let Appendix.WordListComparison = ShowAppendix(Lang.WordListComparison, AllWords.WordListTable)
let Appendix.WordListLanguage   = ShowAppendix(Lang.WordListLanguage, DisplayWords.WordListTable)
let Appendix.LanguageTreeFile   = ShowAppendix(Lang.LanguageTreeFile, TreeLibrary.NexusFile([Info.LanguageTree]) {TextFamily: TextFamilies.Consolas})
let Appendix.NytrilSourceCode   = ShowAppendix(Lang.NytrilSourceCode, Style.SourceFile(each System.SourceList))
//======================================================================



