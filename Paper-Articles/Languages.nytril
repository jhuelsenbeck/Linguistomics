using Format;
//======================================================================

Unknown = {TextColor: Colors.Red}"?"

namespace Languages {
  namespace Old_Irish {
    Name  = "Old Irish"
    Cases = 5
    CognateList = [
      All(Cognate.D1)
    ]
  }

  namespace Irish {
    Name  = "Irish"
    Cases = 4
    CognateList = [
      All(Cognate.D1)
    ]
  }

  namespace Scots_Gaelic {				
    Name  = "Scots Gaelic"
    Cases = 4
    CognateList = [
      All(Cognate.D1)
    ]
  }

  namespace Welsh {
    Name  = "Welsh"
    Cases = 0
    CognateList = [
      All(Cognate.D1)
    ]
  }

  namespace Breton {				
    Name  = "Breton"
    Cases = 0
    CognateList = [
      All(Cognate.I1);
      All(Cognate.D1)
    ]
  }

  namespace Cornish	{				
    Name  = "Cornish"
    Cases = 0
    CognateList = [
      All(Cognate.D1)
    ]
  }

  namespace Latin {					
    Name  = "Latin"
    Cases = 6
    CognateList = []
  }

  namespace Nuorese	{				
    Name  = "Nuorese"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D2)
    ]
  }

  namespace Cagliari					
    Name  = "Cagliari"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D2)
    ]
  }

  namespace Romanian {					
    Name  = "Romanian"
    Cases = 3
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Arumanian {				
    Name  = "Arumanian"
    Cases = 3
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Catalan					
    Name  = "Catalan"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Portuguese {				
    Name  = "Portuguese"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Spanish	{				
    Name  = "Spanish"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace French {				
    Name  = "French"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Provencal {				
    Name  = "Provencal"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Walloon	{				
    Name  = "Walloon"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Ladin {				
    Name  = "Ladin"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Romansh	 {				
    Name  = "Romansh"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Friulian {					
    Name  = "Friulian"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Italian	{				
    Name  = "Italian"
    Cases = 0
    CognateList = [
      All(Cognate.I2);
      All(Cognate.D3)
    ]
  }

  namespace Gothic{				
    Name  = "Gothic"
    Cases = 5
    CognateList = [
      Broad(Cognate.D4)
    ]
  }

  namespace Old_West_Norse	{		
    Name  = "Old West Norse"
    Cases = 4
    CognateList = [
      Narrow(Cognate.D4);
      Broad(Cognate.D5)
    ]
  }

  namespace Icelandic {				
    Name  = "Icelandic"
    Cases = 4
    CognateList = [
      Narrow(Cognate.D4);
      Broad(Cognate.D5)
    ]
  }

  namespace Faroese	{				
    Name  = "Faroese"
    Cases = 4
    CognateList = [
      All(Cognate.I3);
      Narrow(Cognate.D4);
      Broad(Cognate.D5)
    ]
  }

  namespace Norwegian {				
    Name  = "Norwegian"
    Cases = 2
    CognateList = [
      All(Cognate.I3);
      Narrow(Cognate.D4);
      Broad(Cognate.D5)
    ]
  }

  namespace Swedish	 {				
    Name  = "Swedish"
    Cases = 2
    CognateList = [
      All(Cognate.I3);
      Narrow(Cognate.D4);
      Broad(Cognate.D5)
    ]
  }

  namespace Danish	{				
    Name  = "Danish"
    Cases = 2
    CognateList = [
      All(Cognate.I3);
      All(Cognate.D4)
    ]
  }

  namespace Old_English {				
    Name  = "Old English"
    Cases = 4
    CognateList = [
      Broad(Cognate.D6)
    ]
  }

  namespace English	 {				
    Name  = "English"
    Cases = 0
    CognateList = [
      All(Cognate.I4);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Frisian	 {				
    Name  = "Frisian"
    Cases = 2
    CognateList = [
      All(Cognate.I4);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Old_High_German {			
    Name  = "Old High German"
    Cases = 5
    CognateList = [
      Broad(Cognate.D6)
    ]
  }

  namespace German {				
    Name  = "German"
    Cases = 4
    CognateList = [
      All(Cognate.I5);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Luxembourgish {		
    Name  = "Luxembourgish"
    Cases = 3
    CognateList = [
      All(Cognate.I5);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Swiss_German {			
    Name  = "Swiss German"
    Cases = 3
    CognateList = [
      All(Cognate.I5);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Dutch {				
    Name  = "Dutch"
    Cases = 2
    CognateList = [
      All(Cognate.I6);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Flemish	 {
    Name  = "Flemish"
    Cases = 2
    CognateList = [
      All(Cognate.I6);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Afrikaans {	
    Name  = "Afrikaans"
    Cases = 0
    CognateList = [
      All(Cognate.I6);
      Narrow(Cognate.D5);
      Broad(Cognate.D6)
    ]
  }

  namespace Tosk {				
    Name  = "Tosk"
    Cases = 4
    CognateList = [
      All(Cognate.I7);
      Narrow(Cognate.D6);
      Broad(Cognate.D7)
    ]
  }

  namespace Arvanitika {				
    Name  = "Arvanitika"
    Cases = 4
    CognateList = [
      All(Cognate.I7);
      Narrow(Cognate.D6);
      Broad(Cognate.D7)
    ]
  }

  namespace Ancient_Greek {
    Name  = "Ancient Greek"
    Cases = 5
    CognateList = [
      Narrow(Cognate.D7);
      Broad(Cognate.D8)
    ]
  }

  namespace Modern_Greek {		
    Name  = "Modern Greek"
    Cases = 4
    CognateList = [
      All(Cognate.I8);
      Narrow(Cognate.D7);
      Broad(Cognate.D8)
    ]
  }

  namespace Classical_Armenian {		
    Name  = "Classical Armenian"
    Cases = 7
    CognateList = [
      Narrow(Cognate.D8);
      Broad(Cognate.D9)
    ]
  }

  namespace Eastern_Armenian {	
    Name  = "Eastern Armenian"
    Cases = 7
    CognateList = [
      All(Cognate.I9);
      Narrow(Cognate.D8);
      Broad(Cognate.D9)
    ]
  }

  namespace Adapazar {					
    Name  = "Adapazar"
    Cases = Unknown
    CognateList = [
      All(Cognate.I9);
      Narrow(Cognate.D8);
      Broad(Cognate.D9)
    ]
  }

  namespace Old_Prussian {
    Name  = "Old Prussian"
    Cases = 5
    CognateList = [
      Narrow(Cognate.D9);
      Broad(Cognate.D10)
    ]
  }

  namespace Lithuanian {			
    Name  = "Lithuanian"
    Cases = 7
    CognateList = []
  }

  namespace Latvian	 {				
    Name  = "Latvian"
    Cases = 7
    CognateList = [
      Broad(Cognate.D11)
    ]
  }

  namespace Czech {				
    Name  = "Czech"
    Cases = 7
    CognateList = []
  }

  namespace Slovak	{				
    Name  = "Slovak"
    Cases = 6
    CognateList = []
  }

  namespace Polish	{				
    Name  = "Polish"
    Cases = 7
    CognateList = []
   }

  namespace Lower_Sorbian {		
    Name  = "Lower Sorbian"
    Cases = 6
    CognateList = [
      Broad(Cognate.I10);
      Broad(Cognate.D12)
    ]
  }

  namespace Upper_Sorbian {		
    Name  = "Upper Sorbian"
    Cases = 6
    CognateList = [
      Broad(Cognate.I10);
      Broad(Cognate.D12)
    ]
  }

  namespace Ukrainian {				
    Name  = "Ukrainian"
    Cases = 7
    CognateList = []
  }

  namespace Belarusian {
    Name  = "Belarusian"
    Cases = 6
    CognateList = []
  }

  namespace Russian	 {
    Name  = "Russian"
    Cases = 6
    CognateList = []
  }

  namespace Slovenian {			
    Name  = "Slovenian"
    Cases = 6
    CognateList = []
  }

  namespace Macedonian {			
    Name  = "Macedonian"
    Cases = 0
    CognateList = [
      Narrow(Cognate.D10);
      Broad(Cognate.D13)
    ]
  }

  namespace Bulgarian {		
    Name  = "Bulgarian"
    Cases = 2
    CognateList = [
      Narrow(Cognate.D10);
      Broad(Cognate.D13)
    ]
  }

  namespace Serbian {	
    Name  = "Serbian"
    Cases = 7
    CognateList = []
  }

  namespace Old_Church_Slavic {
    Name  = "Old Church Slavic"
    Cases = 7
    CognateList = []
  }

  namespace Avestan	 {
    Name  = "Avestan"
    Cases = 8
    CognateList = []
  }

  namespace Pashto {	
    Name  = "Pashto"
    Cases = 4
    CognateList = []
  }

  namespace Waziri {				
    Name  = "Waziri"
    Cases = Unknown
    CognateList = []
  }

  namespace Tajik {	
    Name  = "Tajik"
    Cases = 0
    CognateList = [
      Narrow(Cognate.I10);
      Broad(Cognate.I11)
    ]
  }

  namespace Persian	 {		
    Name  = "Persian"
    Cases = 0
    CognateList = [
      Narrow(Cognate.I10);
      Broad(Cognate.I11)
    ]
  }

  namespace Sogdian	 {		
    Name  = "Sogdian"
    Cases = 6
    CognateList = [
      Broad(Cognate.I14)
    ]
  }

  namespace Wakhi {		
    Name  = "Wakhi"
    Cases = "4?"
    CognateList = [
      Broad(Cognate.I14)
    ]
  }

  namespace Baluchi {		
    Name  = "Baluchi"
    Cases = 3
    CognateList = [
      Broad(Cognate.I12);
      Broad(Cognate.I14)
    ]
  }

  namespace Kurdish {		
    Name  = "Kurdish"
    Cases = 4
    CognateList = [
      Broad(Cognate.I12);
      Narrow(Cognate.I11);
      Broad(Cognate.I15)
    ]
  }

  namespace Zazaki {	
    Name  = "Zazaki"
    Cases = 2
    CognateList = [
      Broad(Cognate.I12)
    ]
  }

  namespace Shughni {		
    Name  = "Shughni"
    Cases = 5
    CognateList = [
      Broad(Cognate.I13);
      Broad(Cognate.I16)
    ]
  }

  namespace Sariqoli {			
    Name  = "Sariqoli"
    Cases = 2
    CognateList = [
      Broad(Cognate.I13);
      Broad(Cognate.I16)
    ]
  }

  namespace Digor_Ossetic {	
    Name  = "Digor Ossetic"
    Cases = 9
    CognateList = []
  }

  namespace Vedic_Sanskrit {	
    Name  = "Vedic Sanskrit"
    Cases = 8
    CognateList = []
  }

  namespace Nepali {			
    Name  = "Nepali"
    Cases = 0
    CognateList = []
  }

  namespace Assamese {				
    Name  = "Assamese"
    Cases = 6
    CognateList = [
      Narrow(Cognate.I11);
      Broad(Cognate.I14);
      Narrow(Cognate.D12);
      Broad(Cognate.D17)
    ]
  }

  namespace Oriya {			
    Name  = "Oriya"
    Cases = 3
    CognateList = [
      Narrow(Cognate.I11);
      Broad(Cognate.I14);
      Narrow(Cognate.D12);
      Broad(Cognate.D17)
    ]
  }

  namespace Bengali {			
    Name  = "Bengali"
    Cases = 4
    CognateList = [
      Narrow(Cognate.I11);
      Broad(Cognate.I14);
      Narrow(Cognate.D12);
      Broad(Cognate.D17)
    ]
  }

  namespace Bihari {			
    Name  = "Bihari"
    Cases = 5
    CognateList = []
  }

  namespace Marwari {	
    Name  = "Marwari"
    Cases = Unknown
    CognateList = []
  }

  namespace Hindi {	
    Name  = "Hindi"
    Cases = 3
    CognateList = []
  }

  namespace Urdu {				
    Name  = "Urdu"
    Cases = 3
    CognateList = []
  }

  namespace Sindhi {		
    Name  = "Sindhi"
    Cases = 5
    CognateList = []
  }

  namespace Lahnda {
    Name  = "Lahnda"
    Cases = Unknown
    CognateList = []
  }

  namespace Panjabi {
    Name  = "Panjabi"
    Cases = 5
    CognateList = []
  }

  namespace Gujarati {
    Name  = "Gujarati"
    Cases = 3
    CognateList = []
  }

  namespace Marathi {
    Name  = "Marathi"
    Cases = 8
    CognateList = []
  }

  namespace Kashmiri {	
    Name  = "Kashmiri"
    Cases = 5
    CognateList = [
      Broad(Cognate.D18)
     ]
  }

  namespace Singhalese {
    Name  = "Singhalese"
    Cases = 8
    CognateList = [
      Narrow(Cognate.I12);
      Broad(Cognate.I15)
    ]
  }

  namespace Romani {
    Name  = "Romani"
    Cases = 3
    CognateList = [
      Broad(Cognate.I16);
      Narrow(Cognate.D13);
      Broad(Cognate.D19)
    ]
  }

  namespace Tocharian_A {
    Name  = "Tocharian A"
    Cases = 3
    CognateList = []
  }

  namespace Tocharian_B {
    Name  = "Tocharian B"
    Cases = 3
    CognateList = []
  }

  namespace Hittite {
    Name  = "Hittite"
    Cases = 8
    CognateList = []
  }
}
//======================================================================



